{"version":3,"file":"post-item.service.js","sourceRoot":"","sources":["../../../../src/app/pages/home/post-item/post-item.service.ts"],"names":[],"mappings":";;;;AACA,OAAO,EAAE,aAAa,EAAE,MAAM,qCAAqC,CAAC;AAEpE,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AAe3C,MAAM;;;;IACJ,YAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;KAAI;;;;;;IAErD,cAAc,CAAC,KAAa,EAAE,UAAyB;QACrD,GAAG,CAAC,CAAC,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;;YAEtC,qBAAI,QAAQ,CAAC;YACb,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YACrC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,UAAU,CAAC,IAAI,CAAC;gBACd,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;gBACd,MAAM,EAAE,KAAK;aACd,CAAC,CAAC;SACJ;QACD,MAAM,CAAC,UAAU,CAAC;KACnB;;;;;;IAED,cAAc,CAAC,UAAyB,EAAE,GAAG,GAAG,KAAK;;QAGnD,GAAG,CAAC,CAAC,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC/C,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,CAAC,EAAE,CAAC;aACL;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC/C,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxB,CAAC,EAAE,CAAC;iBACL;aACF;SACF;QAED,MAAM,CAAC,UAAU,CAAC;KACnB;;;;;;IAED,WAAW,CAAC,KAAoB,EAAE,IAAe;QAC/C,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACxD;;;YAzCF,UAAU;;;;YAhBF,aAAa","sourcesContent":["import { Observable } from 'rxjs/Observable';\r\nimport { DbPostService } from '../theme/db-service/db-post.service';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface IPostInfo {\r\n  postId: string;\r\n  userId: string;\r\n  content: string;\r\n}\r\n\r\nexport interface IFilesArray {\r\n  blob: string;\r\n  file: File;\r\n  choice: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class PostItemService {\r\n  constructor(private _dbPostService: DbPostService) {}\r\n\r\n  uploadFunction(files: File[], filesArray: IFilesArray[]) {\r\n    for (let i = 0; i < files.length; i++) {\r\n      // 建立blob預覽用\r\n      let tempBlob;\r\n      window.URL.revokeObjectURL(tempBlob);\r\n      tempBlob = window.URL.createObjectURL(files[i]);\r\n      filesArray.push({\r\n        blob: tempBlob,\r\n        file: files[i],\r\n        choice: false\r\n      });\r\n    }\r\n    return filesArray;\r\n  }\r\n\r\n  removeFunction(filesArray: IFilesArray[], all = false) {\r\n    // 把有點成true的remove調，remove前先清掉blob記憶體\r\n\r\n    for (let i = 0; i < filesArray.length; i++) {\r\n      if (all) {\r\n        window.URL.revokeObjectURL(filesArray[i].blob);\r\n        filesArray.splice(i, 1);\r\n        i--;\r\n      } else {\r\n        if (filesArray[i].choice) {\r\n          window.URL.revokeObjectURL(filesArray[i].blob);\r\n          filesArray.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    }\r\n\r\n    return filesArray;\r\n  }\r\n\r\n  uplaodFiles(files: IFilesArray[], info: IPostInfo): Observable<any> {\r\n    return this._dbPostService.createFunction(files, info);\r\n  }\r\n}\r\n"]}
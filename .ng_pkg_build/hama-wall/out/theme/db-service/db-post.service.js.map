{"version":3,"file":"db-post.service.js","sourceRoot":"","sources":["../../../../../src/app/pages/home/theme/db-service/db-post.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AACrD,OAAO,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAQpD,MAAM;;;;;;IACJ,YACU,sBACA,SACA;QAFA,yBAAoB,GAApB,oBAAoB;QACpB,YAAO,GAAP,OAAO;QACP,sBAAiB,GAAjB,iBAAiB;KACvB;;;;;;;IAEJ,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI;QACzB,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAClC,uDAAuD,EACvD;YACE,WAAW,EAAE,WAAW;YACxB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;SACX,CACF,CAAC;KACH;;;;;IAED,MAAM,CAAC,EAAU;QACf,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;KACzE;;;;;;IAED,cAAc,CAAC,KAAoB,EAAE,IAAe;QAClD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,uBAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACnC,sBAAsB,EACtB,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,EACvB,QAAQ,CACT,CAAC;SACH;QAAC,IAAI,CAAC,CAAC;YACN,uBAAM,SAAS,GAAG,EAAE,CAAC;YACrB,GAAG,CAAC,CAAC,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;gBACzB,GAAG,EAAE,eAAe,IAAI,CAAC,MAAM,EAAE;gBACjC,MAAM,EAAE,IAAI;gBACZ,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,IAAI,WAAW,EAAE,CAAC,GAAG,CAC5B,eAAe,EACf,UAAU,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAC5C;aACF,CAAC,CAAC;SACJ;KACF;;;YAhDF,UAAU;;;;YARF,mBAAmB;YACnB,mBAAmB;YAFnB,gBAAgB","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BlockViewService } from '@hamastar/block-view';\r\nimport { HmDefaultHttpClient } from '@hamastar/http';\r\nimport { NgxfUploaderService } from 'ngxf-uploader';\r\nimport swal from 'sweetalert2';\r\n\r\nimport { IFilesArray, IPostInfo } from '../../post-item/post-item.service';\r\nimport { IPagination, IPost } from '../models/hhd-model';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class DbPostService {\r\n  constructor(\r\n    private _hmDefaultHttpClient: HmDefaultHttpClient,\r\n    private _upload: NgxfUploaderService,\r\n    private _blockViewService: BlockViewService\r\n  ) {}\r\n\r\n  get(appOrPostId, skip, take): Observable<IPagination<IPost>> {\r\n    return this._hmDefaultHttpClient.get(\r\n      'http://discuss.hamastar.com.tw/api/Post/{appOrPostId}',\r\n      {\r\n        appOrPostId: appOrPostId,\r\n        skip: skip,\r\n        take: take\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    return this._hmDefaultHttpClient.delete('api/Discuss/{id}', { id: id });\r\n  }\r\n\r\n  createFunction(files: IFilesArray[], info: IPostInfo) {\r\n    if (files.length === 0) {\r\n      const tempForm = new FormData();\r\n      tempForm.append('content', info.content);\r\n      return this._hmDefaultHttpClient.post(\r\n        `api/Discuss/{postId}`,\r\n        { postId: info.postId },\r\n        tempForm\r\n      );\r\n    } else {\r\n      const tempArray = [];\r\n      for (let i = 0; i < files.length; i++) {\r\n        tempArray.push(files[i].file);\r\n      }\r\n      return this._upload.upload({\r\n        url: `api/Discuss/${info.postId}`,\r\n        fields: info,\r\n        files: tempArray,\r\n        process: true,\r\n        headers: new HttpHeaders().set(\r\n          'authorization',\r\n          `Bearer ${sessionStorage.getItem('token')}`\r\n        )\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}
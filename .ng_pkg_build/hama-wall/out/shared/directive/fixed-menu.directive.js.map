{"version":3,"file":"fixed-menu.directive.js","sourceRoot":"","sources":["../../../../../src/app/pages/home/shared/directive/fixed-menu.directive.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACrE,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAKxD,MAAM,yBAA0B,SAAQ,WAAW;;;;;IAKjD,YACU,OACA;QAER,KAAK,EAAE,CAAC;QAHA,UAAK,GAAL,KAAK;QACL,kBAAa,GAAb,aAAa;KAGtB;;;;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,WAAW;aAC3B,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;aACzB,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;aAC3B,SAAS,CAAC,IAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC3D;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC9D;SACF,CAAC,CAAC;KACN;;;;IAEO,UAAU;QAChB,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,KAAK,QAAQ;gBACX,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;YAChF,KAAK,KAAK;gBACR,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;SAC7B;;;;YAlCJ,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;aAC3B;;;;YALkC,UAAU;YACpC,YAAY;;;6BAOlB,KAAK;yBACL,KAAK","sourcesContent":["import { AutoDestroy } from '../base/auto.destroy';\r\nimport { Directive, OnInit, Input, ElementRef } from '@angular/core';\r\nimport { EventService } from '../service/event.service';\r\n\r\n@Directive({\r\n  selector: '[appFixedMenu]'\r\n})\r\nexport class FixedMenuDirective extends AutoDestroy implements OnInit {\r\n\r\n  @Input() appFixedMenu: string;\r\n  @Input() howFixed: string;\r\n\r\n  constructor(\r\n    private _elem: ElementRef,\r\n    private _EventService: EventService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._EventService.scrollEvent\r\n      .takeUntil(this._destroy$)\r\n      .map(e => this.conditions())\r\n      .subscribe(bool => {\r\n        if (bool) {\r\n          this._elem.nativeElement.classList.add(this.appFixedMenu);\r\n        } else {\r\n          this._elem.nativeElement.classList.remove(this.appFixedMenu);\r\n        }\r\n      });\r\n  }\r\n\r\n  private conditions() {\r\n    switch (this.howFixed) {\r\n      case 'scroll':\r\n        return this._elem.nativeElement.parentElement.getBoundingClientRect().top < 0;\r\n      case 'top':\r\n        return window.scrollY > 0;\r\n    }\r\n  }\r\n\r\n}\r\n"]}
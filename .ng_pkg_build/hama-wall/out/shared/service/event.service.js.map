{"version":3,"file":"event.service.js","sourceRoot":"","sources":["../../../../../src/app/pages/home/shared/service/event.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,OAAO,yBAAyB,CAAC;AACjC,OAAO,6BAA6B,CAAC;AACrC,OAAO,6BAA6B,CAAC;AACrC,OAAO,sBAAsB,CAAC;AAC9B,OAAO,0BAA0B,CAAC;AAClC,OAAO,uBAAuB,CAAC;AAC/B,OAAO,6BAA6B,CAAC;AACrC,OAAO,kCAAkC,CAAC;AAC1C,OAAO,mCAAmC,CAAC;AAC3C,OAAO,8BAA8B,CAAC;AACtC,OAAO,0BAA0B,CAAC;AAClC,OAAO,+BAA+B,CAAC;AACvC,OAAO,2BAA2B,CAAC;AAGnC,MAAM;IAWJ;2BAVqB,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC;yBAC1C,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC;yBAC3C,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC;iCACnC,UAAU,CAAC,SAAS,CAC7C,QAAQ,EACR,SAAS,CACV,CAAC,MAAM,CAAC,CAAC,KAAoB;YAC5B,MAAM,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC;SAC7B,CAAC;KAEc;;;YAZjB,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/concatAll';\r\nimport 'rxjs/add/operator/concatMap';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/takeUntil';\r\nimport 'rxjs/add/operator/withLatestFrom';\r\nimport 'rxjs/add/observable/combineLatest';\r\nimport 'rxjs/add/observable/forkJoin';\r\nimport 'rxjs/add/observable/from';\r\nimport 'rxjs/add/observable/fromEvent';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n  public scrollEvent = Observable.fromEvent(document, 'scroll');\r\n  public mouseMove = Observable.fromEvent(document, 'mousemove');\r\n  public touchMove = Observable.fromEvent(document, 'touchmove');\r\n  public keydownEvent_Exit = Observable.fromEvent(\r\n    document,\r\n    'keydown'\r\n  ).filter((event: KeyboardEvent) => {\r\n    return event.keyCode === 27;\r\n  });\r\n\r\n  constructor() {}\r\n}\r\n"]}